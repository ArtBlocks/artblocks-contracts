version: 2.1

orbs:
  node: circleci/node@5.2.0
  aws-cli: circleci/aws-cli@3.0.0

jobs:
  lint:
    docker:
      - image: "cimg/base:stable"
    resource_class: large
    steps:
      - checkout
      - node/install:
          node-version: "20.10"
      - run:
          name: Use yarn berry
          command: |
            corepack enable && yarn set version berry
      - node/install-packages:
          check-cache: always
          pkg-manager: yarn-berry
          with-cache: false
      - run:
          name: Lint
          command: yarn workspace @artblocks/contracts lint
  test:
    docker:
      - image: "cimg/base:stable"
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - node/install:
          node-version: "20.10"
      - run:
          name: Use yarn berry
          command: |
            corepack enable && yarn set version berry
      - node/install-packages:
          pkg-manager: yarn-berry
          check-cache: always
          cache-version: v2
          with-cache: false
      - run:
          name: debug list files
          command: |
            ls ./packages/contracts/contracts
      - run:
          name: compile contracts & generate typechain
          command: |
            yarn workspace @artblocks/contracts run hardhat compile
      - run:
          name: Hardhat Test
          command: |
            cd ./packages/contracts &&
            TEST_FILES="$(circleci tests glob "./test/**/*.ts" | circleci tests split)"
            yarn workspace @artblocks/contracts run test ${TEST_FILES}
  coverage-parallel:
    docker:
      - image: "cimg/base:stable"
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - node/install:
          node-version: "20.10"
      - run:
          name: Use yarn berry
          command: |
            corepack enable && yarn set version berry
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v2
      - run:
          name: coverage
          command: |
            cd ./packages/contracts &&
            TEST_FILES="{$(circleci tests glob "./test/**/*.ts" | circleci tests split | xargs | sed -e 's/ /,/g')}"
            yarn workspace @artblocks/contracts run coverage --testfiles "${TEST_FILES}"
      - run:
          name: save coverage
          command: |
            mkdir -p /tmp/coverage
            cp ./packages/contracts/coverage.json /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - cov_0.json
            - cov_1.json
            - cov_2.json
            - cov_3.json
            - cov_4.json
            - cov_5.json
            - cov_6.json
            - cov_7.json

  report-coverage:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - node/install:
          node-version: "20.10"
      - run:
          name: Use yarn berry
          command: |
            corepack enable && yarn set version berry
      - node/install-packages:
          pkg-manager: yarn-berry
      - attach_workspace:
          at: /tmp/coverage
      - run:
          name: combine coverage reports
          command: |
            cp -R /tmp/coverage/* .
            npx istanbul-combine-updated -r lcov \
              cov_0.json \
              cov_1.json \
              cov_2.json \
              cov_3.json \
              cov_4.json \
              cov_5.json \
              cov_6.json \
              cov_7.json
      - run:
          name: upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls

  lint-and-test:
    docker:
      - image: "cimg/base:stable"
    resource_class: small
    steps:
      - run:
          name: Success
          command: echo "Success"

workflows:
  run-ci:
    jobs:
      - lint
      - test
      - coverage-parallel
      - report-coverage:
          requires:
            - coverage-parallel
      - lint-and-test:
          requires:
            - lint
            - test
